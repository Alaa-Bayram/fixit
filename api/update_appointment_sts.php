<?php

use PHPMailer\PHPMailer\PHPMailer;

session_start();
header('Content-Type: application/json');


require '../db.php'; // Ensure this file properly initializes $conn
require 'fpdf/fpdf.php';
require 'PHPMailer/src/Exception.php';
require 'PHPMailer/src/PHPMailer.php';
require 'PHPMailer/src/SMTP.php';

// Check if worker is logged in using user_id instead of unique_id
if (!isset($_SESSION['user_id'])) {
    http_response_code(401);
    die(json_encode(['error' => 'Worker not logged in']));
}

require '../db.php';

// Validate required parameters
if (!isset($_POST['id']) || !isset($_POST['type']) || !isset($_POST['is_done']) || !isset($_POST['cost'])) {
    http_response_code(400);
    die(json_encode(['error' => 'Required parameters are missing']));
}

$worker_id = $_SESSION['user_id']; // Now using user_id
$id = $_POST['id'];
$type = $_POST['type'];
$is_done = $_POST['is_done'] == '1' ? 1 : 0;
$cost = $_POST['cost'];


// Function to generate PDF (unchanged)
function generatePDF($clientFname, $clientLname, $cost, $appointmentDate, $workerFname, $workerLname, $serviceTitle) {
    $pdf = new FPDF();
    $pdf->AddPage();
    $pdf->SetFillColor(200, 220, 217, 50);
    $pdf->Rect(10, 5, 190, 20, 'F');
    $pdf->Image('logo1.png', 88, 5, 30);
    $pdf->SetFont('Arial', 'B', 16);
    $pdf->Ln(20);
    $pdf->Cell(0, 10, "Bill for $clientFname $clientLname", 0, 1, 'C');
    $pdf->Ln(10);
    $pdf->SetFont('Arial', 'I', 12);
    $pdf->SetTextColor(128);
    $appointmentDateTime = new DateTime($appointmentDate);
    $formattedDate = $appointmentDateTime->format('l j F Y');
    $pdf->Cell(0, 10, "Appointment Date: $formattedDate", 1, 1, 'L');
    $pdf->Cell(0, 10, "Worker: $workerFname $workerLname", 1, 1, 'L');
    $pdf->Cell(0, 10, "Service: $serviceTitle", 1, 1, 'L');
    $pdf->Ln(10);
    $pdf->Cell(0, 10, "Cost: $cost$", 1, 1, 'L');
    $pdf->SetFont('Arial', '', 12);
    $pdf->SetTextColor(0);
    $pdf->Ln(10);
    $pdf->Cell(0, 10, "Thank you for using our service!", 0, 1, 'L');
    $pdf->Ln(10);
    $pdf->SetFont('Arial', 'I', 10);
    $pdf->Cell(0, 10, "Generated by FixIt App", 0, 1, 'C');
    $filename = "Bill_$clientFname $clientLname.pdf";
    $pdf->Output('F', $filename);
    return $filename;
}

// Function to send email (unchanged)
function sendEmail($to, $clientFname, $clientLname, $subject, $message, $attachment) {
    $mail = new PHPMailer(true);
    try {
        $mail->isSMTP();
        $mail->Host       = 'smtp.gmail.com';
        $mail->SMTPAuth   = true;
        $mail->Username   = 'fixitapp.team@gmail.com';
        $mail->Password   = 'eybh rmjq nvbm mmub';
        $mail->SMTPSecure = PHPMailer::ENCRYPTION_SMTPS;
        $mail->Port       = 465;
        $mail->setFrom('fixitapp.team@gmail.com', 'FixIt App');
        $mail->addAddress($to);
        $mail->addAttachment($attachment);
        $mail->isHTML(true);
        $mail->Subject = $subject;
        $mail->Body    = "Dear $clientFname $clientLname,<br><br>$message<br><br>Best regards,<br>FixIt Team";
        $mail->AltBody = "Dear $clientFname $clientLname,\n\n$message\n\nBest regards,\nFixIt Team";
        $mail->send();
        unlink($attachment);
    } catch (Exception $e) {
        error_log("Mailer Error: {$mail->ErrorInfo}");
    }
}

try {
    $conn->beginTransaction();

    if ($type === 'appointment') {
        $updateQuery = $conn->prepare("
            UPDATE appointment
            SET is_done = :is_done, cost = :cost
            WHERE appointment_id = :id AND worker_id = :worker_id
        ");
        
        $getInfoQuery = $conn->prepare("
            SELECT 
                u.email AS clientEmail, u.fname AS clientFname, u.lname AS clientLname,
                w.fname AS workerFname, w.lname AS workerLname,
                a.date AS appointmentDate, s.title AS serviceTitle
            FROM appointment a
            JOIN users u ON a.client_id = u.user_id
            JOIN users w ON a.worker_id = w.user_id
            JOIN services s ON w.service_id = s.service_id
            WHERE a.appointment_id = :id
        ");

    } elseif ($type === 'emergency') {
        $updateQuery = $conn->prepare("
            UPDATE emergencies
            SET is_done = :is_done, cost = :cost
            WHERE id = :id AND EXISTS (
                SELECT 1
                FROM offers
                WHERE emergency_id = :id AND worker_id = :worker_id
            )
        ");

        // Retrieve client, worker, and service info
        $getInfoQuery = $conn->prepare("
            SELECT 
                u.email AS clientEmail, u.fname AS clientFname, u.lname AS clientLname,
                w.fname AS workerFname, w.lname AS workerLname,
                e.created_at AS appointmentDate, s.title AS serviceTitle
            FROM emergencies e
            JOIN users u ON e.client_id = u.user_id
            JOIN users w ON EXISTS (
                SELECT 1
                FROM offers
                WHERE emergency_id = e.id AND worker_id = w.user_id
            )
            JOIN services s ON w.service_id = s.service_id
            WHERE e.id = :id
        ");
    } else {
        throw new Exception('Invalid type provided');
    }

    // Execute the update first
    $updateSuccess = $updateQuery->execute([
        'is_done' => $is_done,
        'cost' => $cost,
        'id' => $id,
        'worker_id' => $worker_id
    ]);

    if (!$updateSuccess || $updateQuery->rowCount() === 0) {
        throw new Exception('Failed to update record or no changes made');
    }

    // Then get the info for email
    $getInfoQuery->execute(['id' => $id]);
    $info = $getInfoQuery->fetch(PDO::FETCH_ASSOC);

    if ($is_done && $info && !empty($info['clientEmail'])) {
        $subject = 'Appointment Completed';
        $message = "We hope everything went well.<br>Below is the bill for your appointment:<br>"
                 . "Cost: $cost$<br><br>"
                 . "Your feedback is important to us...";
        
        $pdfAttachment = generatePDF(
            $info['clientFname'], 
            $info['clientLname'], 
            $cost, 
            $info['appointmentDate'], 
            $info['workerFname'], 
            $info['workerLname'], 
            $info['serviceTitle']
        );
        
        sendEmail($info['clientEmail'], $info['clientFname'], $info['clientLname'], $subject, $message, $pdfAttachment);
    }

    $conn->commit();
    echo json_encode(['success' => true, 'message' => 'Status updated successfully']);

} catch (Exception $e) {
    if ($conn->inTransaction()) {
        $conn->rollBack();
    }
    http_response_code(500);
    echo json_encode(['error' => $e->getMessage()]);
}

$conn = null;
?>